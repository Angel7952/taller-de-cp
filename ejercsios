#include <iostream>
using namespace std;

int main() {
    int numero, contador = 0;
    cout << "Ingresa un número: ";
    cin >> numero;

    if (numero == 0) contador = 1;
    else {
        if (numero < 0) numero = -numero;  // Para números negativos
        while (numero > 0) {
            numero /= 10;
            contador++;
        }
    }

    cout << "El número tiene " << contador << " dígitos." << endl;
    return 0;
}





#include <iostream>
using namespace std;

int main() {
    int numero, suma = 0;
    cout << "Ingresa un número: ";
    cin >> numero;

    if (numero < 0) numero = -numero; // Para números negativos

    while (numero > 0) {
        suma += numero % 10;
        numero /= 10;
    }

    cout << "La suma de los dígitos es: " << suma << endl;
    return 0;
}





#include <iostream>
using namespace std;

int main() {
    int numero;
    bool esPrimo = true;

    cout << "Ingresa un número entero mayor que 1: ";
    cin >> numero;

    if (numero <= 1) esPrimo = false;
    else {
        for (int i = 2; i * i <= numero; i++) {
            if (numero % i == 0) {
                esPrimo = false;
                break;
            }
        }
    }

    if (esPrimo)
        cout << numero << " es un número primo." << endl;
    else
        cout << numero << " no es un número primo." << endl;

    return 0;
}




4ejercisio
#include <iostream>
using namespace std;

int main() {
    int año;
    cout << "Ingresa un año: ";
    cin >> año;

    if ((año % 4 == 0 && año % 100 != 0) || (año % 400 == 0))
        cout << año << " es un año bisiesto." << endl;
    else
        cout << año << " no es un año bisiesto." << endl;

    return 0;
}
5. Calcular la suma de los primeros N números naturales
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 1; i <= N; i++) {
        suma += i;
    }

    cout << "La suma de los primeros " << N << " números naturales es: " << suma << endl;
    return 0;
}




1. Encontrar el mínimo y máximo en una lista de números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    int num, minimo, maximo;
    cout << "Ingresa el número 1: ";
    cin >> num;
    minimo = maximo = num;

    for (int i = 2; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num < minimo) minimo = num;
        if (num > maximo) maximo = num;
    }

    cout << "El número mínimo es: " << minimo << endl;
    cout << "El número máximo es: " << maximo << endl;

    return 0;
}
2. Calcular el promedio de una lista de números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    double suma = 0, num;
    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        suma += num;
    }

    cout << "El promedio es: " << (suma / n) << endl;

    return 0;
}
3. Contar cuántos números pares e impares hay en una lista
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
4. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
6. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
7. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
8. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
9. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
10. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
11. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
13. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
14. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;

}
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    int num, minimo, maximo;
    cout << "Ingresa el número 1: ";
    cin >> num;
    minimo = maximo = num;

    for (int i = 2; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num < minimo) minimo = num;
        if (num > maximo) maximo = num;
    }

    cout << "El número mínimo es: " << minimo << endl;
    cout << "El número máximo es: " << maximo << endl;

    return 0;
}



#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    double suma = 0, num;
    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        suma += num;
    }

    cout << "El promedio es: " << (suma / n) << endl;

    return 0;
}




#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
4. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
6. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
7. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
8. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
9. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
10. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
11. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
13. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
14. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;


#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
4. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
6. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
7. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
8. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
9. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
10. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
11. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
13. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
14. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;








#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
4. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
6. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
7. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
8. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
9. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
10. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
11. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
13. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
14. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;


#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
4. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
6. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
7. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
8. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
9. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
10. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
11. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
13. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
14. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;




























