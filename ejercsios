#include <iostream>
using namespace std;

int main() {
    int numero, contador = 0;
    cout << "Ingresa un número: ";
    cin >> numero;

    if (numero == 0) contador = 1;
    else {
        if (numero < 0) numero = -numero;  // Para números negativos
        while (numero > 0) {
            numero /= 10;
            contador++;
        }
    }

    cout << "El número tiene " << contador << " dígitos." << endl;
    return 0;
}





#include <iostream>
using namespace std;

int main() {
    int numero, suma = 0;
    cout << "Ingresa un número: ";
    cin >> numero;

    if (numero < 0) numero = -numero; // Para números negativos

    while (numero > 0) {
        suma += numero % 10;
        numero /= 10;
    }

    cout << "La suma de los dígitos es: " << suma << endl;
    return 0;
}





#include <iostream>
using namespace std;

int main() {
    int numero;
    bool esPrimo = true;

    cout << "Ingresa un número entero mayor que 1: ";
    cin >> numero;

    if (numero <= 1) esPrimo = false;
    else {
        for (int i = 2; i * i <= numero; i++) {
            if (numero % i == 0) {
                esPrimo = false;
                break;
            }
        }
    }

    if (esPrimo)
        cout << numero << " es un número primo." << endl;
    else
        cout << numero << " no es un número primo." << endl;

    return 0;
}




4ejercisio
#include <iostream>
using namespace std;

int main() {
    int año;
    cout << "Ingresa un año: ";
    cin >> año;

    if ((año % 4 == 0 && año % 100 != 0) || (año % 400 == 0))
        cout << año << " es un año bisiesto." << endl;
    else
        cout << año << " no es un año bisiesto." << endl;

    return 0;
}
5. Calcular la suma de los primeros N números naturales
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 1; i <= N; i++) {
        suma += i;
    }

    cout << "La suma de los primeros " << N << " números naturales es: " << suma << endl;
    return 0;
}




16 Encontrar el mínimo y máximo en una lista de números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    int num, minimo, maximo;
    cout << "Ingresa el número 1: ";
    cin >> num;
    minimo = maximo = num;

    for (int i = 2; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num < minimo) minimo = num;
        if (num > maximo) maximo = num;
    }

    cout << "El número mínimo es: " << minimo << endl;
    cout << "El número máximo es: " << maximo << endl;

    return 0;
}
17 Calcular el promedio de una lista de números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    double suma = 0, num;
    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        suma += num;
    }

    cout << "El promedio es: " << (suma / n) << endl;

    return 0;
}
18 Contar cuántos números pares e impares hay en una lista
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
19 Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
20 Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
21 Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
22 Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
23 Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
24 Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
25 Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
26 Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
27 Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
28. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
29 Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;

}
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    int num, minimo, maximo;
    cout << "Ingresa el número 1: ";
    cin >> num;
    minimo = maximo = num;

    for (int i = 2; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num < minimo) minimo = num;
        if (num > maximo) maximo = num;
    }

    cout << "El número mínimo es: " << minimo << endl;
    cout << "El número máximo es: " << maximo << endl;

    return 0;
}



#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n <= 0) {
        cout << "Cantidad inválida." << endl;
        return 1;
    }

    double suma = 0, num;
    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        suma += num;
    }

    cout << "El promedio es: " << (suma / n) << endl;

    return 0;
}




#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
30 Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
5. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
31 Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}32. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
33 Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
34 Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
35 Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
36 Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
37 Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
38 Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
39 Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;


#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
40. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
41. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
42 Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
43. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
48 Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
49. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
50. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
51. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
52. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
53. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;







54
#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
55. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
56. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
57. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
58. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
59. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
60. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
61. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
62. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
12. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
63. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
64. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;


#include <iostream>
using namespace std;

int main() {
    int n, num;
    int pares = 0, impares = 0;

    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) {
        cout << "Ingresa el número " << i << ": ";
        cin >> num;
        if (num % 2 == 0) pares++;
        else impares++;
    }

    cout << "Cantidad de números pares: " << pares << endl;
    cout << "Cantidad de números impares: " << impares << endl;

    return 0;
}
65. Ordenar una lista de números de menor a mayor (método burbuja)
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];  // Suponemos máximo 100 números para simplicidad

    for (int i = 0; i < n; i++) {
        cout << "Ingresa el número " << i + 1 << ": ";
        cin >> arr[i];
    }

    // Método burbuja
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    cout << "Lista ordenada: ";
    for (int i = 0; i < n; i++) cout << arr[i] << " ";
    cout << endl;

    return 0;
}
66. Verificar si una palabra es un palíndromo
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string palabra;
    cout << "Ingresa una palabra: ";
    cin >> palabra;

    int inicio = 0;
    int fin = palabra.length() - 1;
    bool esPalindromo = true;

    while (inicio < fin) {
        if (palabra[inicio] != palabra[fin]) {
            esPalindromo = false;
            break;
        }
        inicio++;
        fin--;
    }

    if (esPalindromo)
        cout << palabra << " es un palíndromo." << endl;
    else
        cout << palabra << " no es un palíndromo." << endl;

    return 0;
}
68. Convertir un número decimal a binario
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int numero;
    cout << "Ingresa un número decimal: ";
    cin >> numero;

    if (numero == 0) {
        cout << "Binario: 0" << endl;
        return 0;
    }

    int binario[32];
    int i = 0;

    while (numero > 0) {
        binario[i] = numero % 2;
        numero /= 2;
        i++;
    }

    cout << "Binario: ";
    for (int j = i - 1; j >= 0; j--) {
        cout << binario[j];
    }
    cout << endl;

    return 0;
}
69. Generar un número aleatorio entre 1 y 100
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));  // Semilla aleatoria basada en el tiempo actual

    int aleatorio = rand() % 100 + 1;  // Número entre 1 y 100
    cout << "Número aleatorio entre 1 y 100: " << aleatorio << endl;

    return 0;
}
70. Calcular la suma de los números pares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingresa un número entero positivo N: ";
    cin >> N;

    for (int i = 2; i <= N; i += 2) {
        suma += i;
    }

    cout << "La suma de los números pares hasta " << N << " es: " << suma << endl;

    return 0;
}
71. Hallar el MCD (Máximo Común Divisor) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    // Algoritmo de Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }

    cout << "El MCD es: " << a << endl;

    return 0;
}
72. Hallar el MCM (Mínimo Común Múltiplo) de dos números
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int a, b, mcd, mcm;
    cout << "Ingresa dos números enteros: ";
    cin >> a >> b;

    int x = a, y = b;

    // Calcular MCD con Euclides
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    mcd = a;

    // Calcular MCM usando la relación: mcm = (x * y) / mcd
    mcm = (x * y) / mcd;

    cout << "El MCM es: " << mcm << endl;

    return 0;
}
73. Simular el lanzamiento de un dado
cpp
Copiar
Editar
#include <iostream>
#include <cstdlib>
#include <ctime>
using namespace std;

int main() {
    srand(time(0));

    int dado = rand() % 6 + 1;  // Número entre 1 y 6
    cout << "Lanzamiento del dado: " << dado << endl;

    return 0;
}
74. Contar la frecuencia de cada letra en una cadena
cpp
Copiar
Editar
#include <iostream>
#include <string>
using namespace std;

int main() {
    string texto;
    int frecuencia[26] = {0};

    cout << "Ingresa una cadena de texto (solo letras): ";
    getline(cin, texto);

    for (char c : texto) {
        if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';  // Convertir mayúsculas a minúsculas
        if (c >= 'a' && c <= 'z') {
            frecuencia[c - 'a']++;
        }
    }

    for (int i = 0; i < 26; i++) {
        if (frecuencia[i] > 0)
            cout << char(i + 'a') << ": " << frecuencia[i] << endl;
    }

    return 0;
}
75. Encontrar el segundo número más grande en una lista
cpp
Copiar
Editar
#include <iostream>
#include <climits>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    if (n < 2) {
        cout << "Necesitas ingresar al menos dos números." << endl;
        return 1;
    }

    int max1 = INT_MIN, max2 = INT_MIN, num;

    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> num;

        if (num > max1) {
            max2 = max1;
            max1 = num;
        } else if (num > max2 && num != max1) {
            max2 = num;
        }
    }

    if (max2 == INT_MIN)
        cout << "No hay segundo número más grande distinto." << endl;
    else
        cout << "El segundo número más grande es: " << max2 << endl;

    return 0;
}
76. Rotar una lista a la derecha una posición
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "¿Cuántos números quieres ingresar? ";
    cin >> n;

    int arr[100];
    for (int i = 0; i < n; i++) {
        cout << "Número " << i + 1 << ": ";
        cin >> arr[i];
    }

    if (n > 1) {
        int ultimo = arr[n - 1];
        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }
        arr[0] = ultimo;



77. Generar ternas pitagóricas
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int limite;
    cout << "Ingrese el límite superior para los valores: ";
    cin >> limite;

    cout << "Ternas pitagóricas hasta " << limite << ":\n";
    for (int a = 1; a <= limite; a++) {
        for (int b = a; b <= limite; b++) {
            for (int c = b; c <= limite; c++) {
                if (a * a + b * b == c * c) {
                    cout << "(" << a << ", " << b << ", " << c << ")\n";
                }
            }
        }
    }

    return 0;
}
78. Calcular el producto escalar de dos vectores
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Ingrese el tamaño de los vectores: ";
    cin >> n;

    int v1[100], v2[100];
    cout << "Ingrese los elementos del primer vector:\n";
    for (int i = 0; i < n; i++) cin >> v1[i];

    cout << "Ingrese los elementos del segundo vector:\n";
    for (int i = 0; i < n; i++) cin >> v2[i];

    int producto = 0;
    for (int i = 0; i < n; i++) producto += v1[i] * v2[i];

    cout << "Producto escalar: " << producto << endl;
    return 0;
}
80. Sumar números consecutivos en una lista
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int n, suma = 0;
    cout << "¿Cuántos números consecutivos quieres sumar? ";
    cin >> n;

    for (int i = 1; i <= n; i++) suma += i;

    cout << "La suma de los primeros " << n << " números es: " << suma << endl;
    return 0;
}
81. Encontrar el menor número divisible por un valor dado
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int inicio, valor;
    cout << "Ingrese el número inicial: ";
    cin >> inicio;
    cout << "Ingrese el valor divisor: ";
    cin >> valor;

    while (inicio % valor != 0) inicio++;

    cout << "El menor número divisible por " << valor << " es: " << inicio << endl;
    return 0;
}
82 Suma de cuadrados de los primeros N números naturales
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingrese un número N: ";
    cin >> N;

    for (int i = 1; i <= N; i++) {
        suma += i * i;
    }

    cout << "Suma de cuadrados de los primeros " << N << " números: " << suma << endl;
    return 0;
}
83. Suma de cuadrados de los números impares hasta N
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int N, suma = 0;
    cout << "Ingrese un número N: ";
    cin >> N;

    for (int i = 1; i <= N; i += 2) {
        suma += i * i;
    }

    cout << "Suma de cuadrados de impares hasta " << N << ": " << suma << endl;
    return 0;
}
84. Invertir los dígitos de un número
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int num, invertido = 0;
    cout << "Ingrese un número: ";
    cin >> num;

    while (num != 0) {
        invertido = invertido * 10 + (num % 10);
        num /= 10;
    }

    cout << "Número invertido: " << invertido << endl;
    return 0;
}
85. Verificar si un carácter es un dígito
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    char c;
    cout << "Ingrese un carácter: ";
    cin >> c;

    if (c >= '0' && c <= '9') {
        cout << "Es un dígito." << endl;
    } else {
        cout << "No es un dígito." << endl;
    }

    return 0;
}
86. Contar el número de dígitos en un número
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int num, contador = 0;
    cout << "Ingrese un número: ";
    cin >> num;

    if (num == 0) contador = 1;
    else {
        while (num != 0) {
            num /= 10;
            contador++;
        }
    }

    cout << "Cantidad de dígitos: " << contador << endl;
    return 0;
}
87. Obtener el primer dígito de un número
cpp
Copiar
Editar
#include <iostream>
using namespace std;

int main() {
    int num;
    cout << "Ingrese un número: ";
    cin >> num;

    while (num >= 10) {
        num /= 10;
    }

    cout << "Primer dígito: " << num << endl;
    return 0;
}




























